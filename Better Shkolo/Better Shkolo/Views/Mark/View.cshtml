@using Better_Shkolo.Models.Mark;
@model IEnumerable<MarkDisplayModel>

<div class="">
    @foreach (var mark in Model)
    {
        <div class="">
            @mark.SubjectName |
            @foreach (var item in mark.Marks)
            {
                <button class="mark-button" value="@item.Id">@item.Value</button>
            }
            <div id="dropdown-content">

            </div>
        </div>
    }
</div>

<style>
    #dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }
</style>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('.mark-button').on('click', function () {
                var param = $(this).val();
                var selectorCell = $(this).closest('.grade-selector');

                selectorCell.find('.grade-btn').not(this).removeClass('selected');

                if ($(this).hasClass('selected')) {
                    $('#dropdown-content').css('display', 'none');
                    $(this).removeClass('selected');
                }
                else{
                    selectorCell.find('.grade-btn').removeClass('selected');
                    $(this).addClass('selected');

                    $.ajax({
                        url: 'https://localhost:7169/api/statistics/GetMark?id=' + param,
                        type: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            $('#dropdown-content').css('display', 'block');
                            $('#dropdown-content').html('');

                            var teacherName = data.teacherName;
                            var value = data.value;
                            var addedOn = data.addedOn;

                            let h4 = $('<h4>');
                            h4.text('Teacher: ' + teacherName);

                            let p1 = $('<p>');
                            p1.text('Mark: ' + value);

                            let p2 = $('<p>');
                            p2.text('Added on: ' + addedOn)

                            $('#dropdown-content').append(h4);
                            $('#dropdown-content').append(p1);
                            $('#dropdown-content').append(p2);
                        }
                    });
                }
            });
        });
    </script>
}

<script>
    handleGradeButtonClick: function() {
        $('.grade-btn').on('click', function () {
            var selectorCell = $(this).closest('.grade-selector');
            var isNumericBtn = $(this).hasClass('numeric');
            // De-select all buttons, but this one.
            selectorCell.find('.grade-btn.custom').not(this).removeClass('selected');

            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
                if (!isNumericBtn) {
                    selectorCell.find('.selected-grade-box').empty();
                }
            }
            else {
                selectorCell.find('.grade-btn').removeClass('selected');
                $(this).addClass('selected');
                if (!isNumericBtn) {
                    var selectedGradeBox = selectorCell.find('.selected-grade-box');
                    selectedGradeBox.empty();
                    $(this).clone().appendTo(selectedGradeBox);
                }
            }
            // Numeric buttons will update the grade numeric input and it change will trigger the update of the hidden fields.
            if (!isNumericBtn) {
                gradeSelector.updateGradeSelectorHiddenFields(this);
            }
        });
    },
</script>